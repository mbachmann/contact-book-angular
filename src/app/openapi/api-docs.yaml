openapi: 3.0.1
info:
  title: API for Contact App
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: '@springdoc.version@'
servers:
- url: https://contact-book-h2.united-portal.com
paths:
  /api/contacts/{id}:
    get:
      tags:
      - Contacts
      summary: Get a contact by its id
      operationId: findById
      parameters:
      - name: id
        in: path
        description: id of contact to be searched
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid id supplied
        "404":
          description: contact not found
        "200":
          description: Found the contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
    put:
      tags:
      - Contacts
      operationId: edit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
    delete:
      tags:
      - Contacts
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/contact-relations/{id}:
    get:
      tags:
      - Configurations
      operationId: getContactRelation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactRelation'
    put:
      tags:
      - Configurations
      operationId: updateContactRelation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRelation'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactRelation'
    delete:
      tags:
      - Configurations
      operationId: deleteContactRelation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/contact-groups/{id}:
    get:
      tags:
      - Configurations
      operationId: getContactGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactGroup'
    put:
      tags:
      - Configurations
      operationId: updateContactGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactGroup'
    delete:
      tags:
      - Configurations
      operationId: deleteContactGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/codes/{id}:
    get:
      tags:
      - Configurations
      operationId: getCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Code'
    put:
      tags:
      - Configurations
      operationId: updateCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Code'
    delete:
      tags:
      - Configurations
      operationId: deleteCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/contacts:
    get:
      tags:
      - Contacts
      operationId: findAll
      parameters:
      - name: filter
        in: query
        description: full text filter
        required: false
        schema:
          type: string
      - name: eagerload
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    post:
      tags:
      - Contacts
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
    delete:
      tags:
      - Contacts
      summary: Delete all contacts
      operationId: deleteAll
      parameters:
      - name: password
        in: query
        description: delete all contacts password
        required: false
        schema:
          type: string
          default: password
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/contact-relations:
    get:
      tags:
      - Configurations
      operationId: getAllContactRelations
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactRelation'
    post:
      tags:
      - Configurations
      operationId: createContactRelation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRelation'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactRelation'
  /api/contact-groups:
    get:
      tags:
      - Configurations
      operationId: getAllContactGroups
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactGroup'
    post:
      tags:
      - Configurations
      operationId: createContactGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactGroup'
  /api/codes:
    get:
      tags:
      - Configurations
      operationId: getAllCodeTypes
      parameters:
      - name: codeType
        in: query
        description: "The CodeType like AllCodes, EmailType, PhoneType or AddressType"
        required: false
        schema:
          type: string
          default: AllCodes
          enum:
          - EmailType
          - PhoneType
          - AddressType
          - AllCodes
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Code'
    post:
      tags:
      - Configurations
      operationId: createCode
      parameters:
      - name: codeType
        in: query
        description: "The CodeType like EmailType, PhoneType or AddressType"
        required: false
        schema:
          type: string
          default: AddressType
          enum:
          - EmailType
          - PhoneType
          - AddressType
          - AllCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Code'
  /api/contacts/create:
    patch:
      tags:
      - Contacts
      summary: Batch create random contacts
      operationId: createContacts
      parameters:
      - name: amount
        in: query
        description: amount of contacts to create (1 ... 10000)
        required: false
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: password
        in: query
        description: create contacts password
        required: false
        schema:
          type: string
          default: password
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/contacts/list:
    get:
      tags:
      - Contacts
      operationId: findAllContactViewList
      parameters:
      - name: filter
        in: query
        description: full text filter
        required: false
        schema:
          type: string
      - name: groups
        in: query
        description: "comma separated list of groups, * for all, - not assigned"
        required: false
        schema:
          type: string
          default: '*'
      - name: relations
        in: query
        description: "comma separated list of relations, * for, - not assigned"
        required: false
        schema:
          type: string
          default: '*'
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactViewList'
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        addressType:
          $ref: '#/components/schemas/AddressType'
        street:
          maxLength: 50
          minLength: 0
          type: string
        additional:
          maxLength: 255
          minLength: 0
          type: string
        postalCode:
          maxLength: 5
          minLength: 4
          type: string
        city:
          maxLength: 50
          minLength: 0
          type: string
        country:
          type: string
        defaultAddress:
          type: boolean
    AddressType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        shortCut:
          type: string
        active:
          type: boolean
        usage:
          type: integer
          format: int64
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
        photo:
          type: array
          items:
            type: string
            format: byte
        thumbNail:
          type: array
          items:
            type: string
            format: byte
        photoContentType:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        company:
          type: string
        birthDate:
          type: string
          format: date
        notes:
          type: string
        phones:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        addresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
        emails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Email'
        relations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ContactRelation'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ContactGroup'
    ContactGroup:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contacts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        usage:
          type: integer
          format: int64
    ContactRelation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contactRelationType:
          type: string
          enum:
          - CUSTOMER
          - CREDITOR
          - COLLEAGUES
          - AUTORITY
          - MEDICAL
          - OTHERS
          - FAMILIY
          - FRIENDS
        contactRelationValue:
          type: string
        contacts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        usage:
          type: integer
          format: int64
    Email:
      type: object
      properties:
        id:
          type: integer
          format: int64
        emailType:
          $ref: '#/components/schemas/EmailType'
        address:
          maxLength: 60
          minLength: 2
          type: string
    EmailType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        shortCut:
          type: string
        active:
          type: boolean
        usage:
          type: integer
          format: int64
    Phone:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phoneType:
          $ref: '#/components/schemas/PhoneType'
        number:
          maxLength: 20
          minLength: 2
          type: string
    PhoneType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        shortCut:
          type: string
        active:
          type: boolean
        usage:
          type: integer
          format: int64
    Code:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        shortCut:
          type: string
        active:
          type: boolean
        usage:
          type: integer
          format: int64
    ContactViewList:
      type: object
      properties:
        name:
          type: string
          description: "Aggregated information: company name, lastname, firstname"
        id:
          type: integer
          description: The id of the contact
          format: int64
        thumbNail:
          type: string
          description: The thumbnail of the contact
          format: binary
        groupsIdAggregate:
          type: string
          description: Aggregated group id's
        relationsIdAggregate:
          type: string
          description: Aggregated relations id's
        birthDate:
          type: string
          description: The birth date of the contact
          format: date
        phonesAggregate:
          type: string
          description: Aggregated phone numbers
        addressesAggregate:
          type: string
          description: Aggregated email adresses
        emailsAggregate:
          type: string
          description: Aggregated email addresses
        lastName:
          type: string
          description: The last or surname name of the contact
        company:
          type: string
          description: The company of the contact
        photoContentType:
          type: string
          description: The content type like image/jpeg or image/png of the thumbnail
            or photo
        firstName:
          type: string
          description: The first name of the contact
